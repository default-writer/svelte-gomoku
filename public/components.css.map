{
  "version": 3,
  "file": "components.css",
  "sources": [
    "..\\src\\App.svelte",
    "..\\routes\\New.svelte",
    "..\\routes\\Settings.svelte",
    "..\\components\\TopMenu.svelte",
    "..\\components\\BottomMenu.svelte",
    "..\\components\\Title.svelte",
    "..\\ui\\Board.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n  import New from \"../routes/New.svelte\";\r\n  import Play from \"../routes/Play.svelte\";\r\n  import Settings from \"../routes/Settings.svelte\";\r\n  import Error from \"../routes/Error.svelte\";\r\n  import Result from \"../routes/Result.svelte\";\r\n  import Router from \"svelte-spa-router\";\r\n  import { push } from \"svelte-spa-router\";\r\n\r\n  const routes = {\r\n    // Exact path\r\n    \"/\": New,\r\n    \"/play\": Play,\r\n    \"/settings\": Settings,\r\n    \"/result\": Result,\r\n    // Catch-all\r\n    // This is optional, but if present it must be the last\r\n    \"*\": Error\r\n  };\r\n\r\n  push(\"/\");\r\n</script>\r\n<style>\r\n  /*@import url(\"./fonts/Cousine-Regular.ttf\");*/\r\n  :global(body) {\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  :global(*) {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: \"Cousine Regular\", \"Trebuchet MS\", \"Lucida Sans Unicode\",\r\n      \"Lucida Grande\", \"Lucida Sans\", Arial, sans-serif;\r\n    -webkit-user-select: none; /* webkit (safari, chrome) browsers */\r\n    -moz-user-select: none; /* mozilla browsers */\r\n    -khtml-user-select: none; /* webkit (konqueror) browsers */\r\n    -ms-user-select: none; /* IE10+ */\r\n  }\r\n  :global(h1) {\r\n    font-size: 1.5em;\r\n  }\r\n  main {\r\n    margin-top: 3em;\r\n    margin: 0 auto;\r\n    border: 0;\r\n    margin: 0;\r\n    padding: 0;\r\n    text-align: center;\r\n  }\r\n</style>\r\n<main>\r\n  <Router {routes}/>\r\n</main>\r\n",
    "<script>\r\n  import Animation from \"../components/Animation.svelte\";\r\n  import Title from \"../components/Title.svelte\";\r\n  import TopMenu from \"../components/TopMenu.svelte\";\r\n  import BottomMenu from \"../components/BottomMenu.svelte\";\r\n  import { push } from \"svelte-spa-router\";\r\n  import { name1, name2, game } from \"../data/store.js\";\r\n\r\n  let player1;\r\n  let player2;\r\n\r\n  let player1Name = \"\";\r\n  let player2Name = \"\";\r\n\r\n  function newGame(event) {\r\n    event.preventDefault();\r\n    if (player1.value != \"\" && player2.value != \"\") {\r\n      $name1 = player1.value;\r\n      $name2 = player2.value;\r\n      if ($game.render) {\r\n        $game.render.remove();\r\n      }\r\n      $game.board = null;\r\n      $game.result = \"\";\r\n      push(\"/play\");\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  input {\r\n    margin-top: 1em;\r\n    margin-bottom: 1em;\r\n    margin-left: 1em;\r\n    background-color: #f2f2f2;\r\n    font-size: 1.5em;\r\n    padding: 0.5em;\r\n    box-sizing: border-box;\r\n    border: 1px solid #ccc;\r\n    border-radius: 2px;\r\n  }\r\n  label {\r\n    font-size: 1.5em;\r\n  }\r\n</style>\r\n\r\n<TopMenu/>\r\n  <Animation>\r\n    <Title name=\"Gomoku\"/>\r\n    <label for=\"player1\">Player 1 Name</label>\r\n    <input bind:this=\"{player1}\" type=\"text\" id=\"player1\" value={$name1} />\r\n    <p></p>\r\n    <label for=\"player2\">Player 2 Name</label>\r\n    <input bind:this=\"{player2}\" type=\"text\" id=\"player2\" value={$name2} />\r\n    <p></p>\r\n  </Animation>\r\n<BottomMenu on:click={newGame} text=\"Start\"/>\r\n",
    "<script>\r\n  import Animation from \"../components/Animation.svelte\";\r\n  import Title from \"../components/Title.svelte\";\r\n  import TopMenu from \"../components/TopMenu.svelte\";\r\n  import BottomMenu from \"../components/BottomMenu.svelte\";\r\n  import { push } from \"svelte-spa-router\";\r\n\r\n  import { R, G, B, game } from \"../data/store.js\";\r\n\r\n  let r, g, b;\r\n  function applySettings() {\r\n    event.preventDefault();\r\n    if (\r\n      r.value >= 0 &&\r\n      r.value <= 255 &&\r\n      g.value >= 0 &&\r\n      g.value <= 255 &&\r\n      b.value >= 0 &&\r\n      b.value <= 255\r\n    ) {\r\n      $R = r.value;\r\n      $G = g.value;\r\n      $B = b.value;\r\n      push(\"/play\");\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  input {\r\n    margin-top: 1em;\r\n    margin-bottom: 1em;\r\n    margin-left: 1em;\r\n    background-color: #f2f2f2;\r\n    font-size: 1.5em;\r\n    padding: 0.5em;\r\n    box-sizing: border-box;\r\n    border: 1px solid #ccc;\r\n    border-radius: 2px;\r\n  }\r\n  label {\r\n    font-size: 1.5em;\r\n  }\r\n</style>\r\n\r\n<TopMenu/>\r\n  <Animation>\r\n    <Title name=\"Gomoku\"/>\r\n    <label for=\"r\">R</label>\r\n    <input bind:this=\"{r}\"  id=\"r\" type=\"number\" value={$R} min=\"0\" max=\"255\"/>\r\n    <p></p>\r\n    <label for=\"g\">G</label>\r\n    <input bind:this=\"{g}\"  id=\"g\" type=\"number\" value={$G} min=\"0\" max=\"255\"/>\r\n    <p></p>\r\n    <label for=\"b\">B</label>\r\n    <input bind:this=\"{b}\"  id=\"b\" type=\"number\" value={$B} min=\"0\" max=\"255\"/>\r\n    <p></p>\r\n  </Animation>\r\n<BottomMenu on:click={applySettings} text=\"Apply\"/>",
    "﻿<script>\r\n  import { link, location, push } from \"svelte-spa-router\";\r\n  import { game } from \"../data/store.js\";\r\n\r\n  function playGame() {\r\n    push(\"/play\");\r\n  }\r\n  function settingsGame() {\r\n    push(\"/settings\");\r\n  }\r\n</script>\r\n<style>\r\n  /* The navigation bar */\r\n  .navbar {\r\n    overflow: hidden;\r\n    background-color: rgb(22, 88, 38);\r\n    top: 0; /* Position the navbar at the top of the page */\r\n    width: 100%; /* Full width */\r\n    height: auto;\r\n  }\r\n\r\n  /* Links inside the navbar */\r\n  .navbar a {\r\n    float: left;\r\n    display: block;\r\n    color: #f2f2f2;\r\n    text-align: center;\r\n    padding: 1em 2em;\r\n    font-size: 1.5em;\r\n    text-decoration: none;\r\n  }\r\n  .navbar div {\r\n    float: right;\r\n    display: block;\r\n    color: #adadad;\r\n    text-align: center;\r\n    padding: 1em 2em;\r\n    text-decoration: none;\r\n    font-size: 1.5em;\r\n  }\r\n\r\n  /* Change background on mouse-over */\r\n  .navbar a:hover {\r\n    background: #ddd;\r\n    color: black;\r\n  }\r\n</style>\r\n\r\n<div id=\"topMenu\" class=\"navbar\">\r\n  <a href=\"/play\" on:click={playGame} use:link>Play</a>\r\n  <a href=\"/settings\" on:click={settingsGame} use:link>Settings</a>\r\n  <div>/{$location == \"/\" ? \"/new game\" : $location}</div>\r\n</div>",
    "﻿<script>\r\n  export let text;\r\n</script>\r\n\r\n<style>\r\n  div {\r\n    position: fixed;\r\n    top: 100%;\r\n    transform: translateY(-100%);\r\n    width: 100%;\r\n    background-color: black;\r\n    display: block;\r\n    color: #f2f2f2;\r\n    text-align: center;\r\n    margin: 0 0 0.5em 0;\r\n    box-sizing: border-box;\r\n    padding: 1em 2em;\r\n    font-size: 1.5em;\r\n    text-decoration: none;\r\n  }\r\n</style>\r\n\r\n<div id=\"bottomMenu\" on:click>{text}</div>",
    "<script>\r\n    export let name;\r\n</script>\r\n<style>\r\n  h1 {\r\n    padding: 1em 1.5em 1em 1.5em;\r\n    font-size: 1.5em;\r\n  }\r\n</style>\r\n<h1 id=\"title\">{name}</h1>",
    "<script>\r\n  import p5 from \"../utils/p5.min.js\";\r\n  import { R, G, B, name1, name2, game, alphabet } from \"../data/store.js\";\r\n  import { onMount } from \"svelte\";\r\n  import { push } from \"svelte-spa-router\";\r\n\r\n  export let board;\r\n\r\n  let id;\r\n  let result = \"\";\r\n\r\n  const columns = 20;\r\n  const rows = 20;\r\n\r\n  function initialize() {\r\n    if (!board) {\r\n      $game.current_player = 2; // black first\r\n      board = new Array(columns);\r\n      for (let i = 0; i < columns; i++) {\r\n        board[i] = new Array(rows);\r\n      }\r\n\r\n      for (let i = 0; i < columns; i++) {\r\n        for (let j = 0; j < rows; j++) {\r\n          board[i][j] = 0;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function isGameOver(i, j) {\r\n    let board = $game.board;\r\n    let color = board[i][j];\r\n    if (color !== 0) {\r\n      let count1 =\r\n        lookForward(i, j, color, 0, 1) + lookForward(i, j, color, 0, -1);\r\n      let count2 =\r\n        lookForward(i, j, color, 1, 0) + lookForward(i, j, color, -1, 0);\r\n      let count3 =\r\n        lookForward(i, j, color, 1, 1) + lookForward(i, j, color, -1, -1);\r\n      let count4 =\r\n        lookForward(i, j, color, -1, 1) + lookForward(i, j, color, 1, -1);\r\n      if (count1 > 5 || count2 > 5 || count3 > 5 || count4 > 5) return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function lookForward(x, y, color, di, dj) {\r\n    let count = 0;\r\n    let i = x;\r\n    let j = y;\r\n    while (i > 0 && i < columns && j > 0 && j < rows) {\r\n      if (board[i][j] === color) {\r\n        count++;\r\n      } else {\r\n        break;\r\n      }\r\n      i = i + di;\r\n      j = j + dj;\r\n    }\r\n    return count;\r\n  }\r\n\r\n  function click() {\r\n    if ($game.current_player === 0) {\r\n      return false;\r\n    }\r\n    let p5 = $game.render;\r\n    let board = $game.board;\r\n    let cellWidth = $game.cellWidth;\r\n    if (\r\n      p5.mouseX <= 0 ||\r\n      p5.mouseX >= columns * cellWidth ||\r\n      p5.mouseY <= 0 ||\r\n      p5.mouseY >= rows * cellWidth\r\n    ) {\r\n      return false;\r\n    }\r\n\r\n    const i = p5.floor((p5.mouseX + cellWidth / 2) / cellWidth);\r\n    const j = p5.floor((p5.mouseY + cellWidth / 2) / cellWidth);\r\n\r\n    if (i <= 0 || j <= 0 || i >= columns || j >= rows) {\r\n      return false;\r\n    }\r\n\r\n    // if not the end of the game\r\n    if ($game.current_player !== 0) {\r\n      if (board[i][j] === 0) {\r\n        board[i][j] = $game.current_player;\r\n        $game.current_player = $game.current_player === 1 ? 2 : 1;\r\n      }\r\n    }\r\n\r\n    p5.draw();\r\n\r\n    if (isGameOver(i, j)) {\r\n      $game.result =\r\n        \"game over \" +\r\n        ($game.current_player === 1 ? $name1 + \" (black)\" : $name2 + \" (white)\") +\r\n        \" wins\";\r\n      $game.current_player = 0;\r\n      push(\"/result\");\r\n    }\r\n  }\r\n\r\n  let title;\r\n\r\n  let render = function(p5) {\r\n    let img;\r\n    let board = $game.board;\r\n    let cellWidth;\r\n    let textSize;\r\n    let strokeWidth;\r\n    let white = p5.color(255);\r\n    let black = p5.color(0);\r\n    p5.setup = () => {\r\n      let max = p5.floor(\r\n        p5.min(\r\n          p5.windowWidth,\r\n          p5.windowHeight -\r\n            document.getElementById(\"topMenu\").offsetHeight -\r\n            document.getElementById(\"bottomMenu\").offsetHeight -\r\n            document.getElementById(\"title\").offsetHeight\r\n        )\r\n      );\r\n\r\n      textSize = document.getElementById(\"topMenu\").offsetHeight / 3;\r\n      cellWidth = p5.floor(max / 20);\r\n\r\n      // save settings for mouse interaction;\r\n      $game.cellWidth = cellWidth;\r\n\r\n      strokeWidth = p5.floor(cellWidth / 32);\r\n      p5.createCanvas(cellWidth * 20, cellWidth * 20);\r\n      p5.noLoop();\r\n    };\r\n    p5.draw = () => {\r\n      p5.push();\r\n      p5.smooth();\r\n      p5.background($R, $G, $B);\r\n      p5.fill($R, $G, $B);\r\n      p5.strokeWeight(0.5);\r\n      p5.rect(0, 0, columns * cellWidth - 1, rows * cellWidth - 1);\r\n      for (let i = 1; i < columns - 1; i++) {\r\n        for (let j = 1; j < rows - 1; j++) {\r\n          p5.push();\r\n          p5.fill($R, $G, $B);\r\n          p5.rect(i * cellWidth, j * cellWidth, cellWidth - 1, cellWidth - 1);\r\n          p5.pop();\r\n        }\r\n      }\r\n      for (let i = 4; i < columns - 1; i += 6) {\r\n        for (let j = 4; j < rows - 1; j += 6) {\r\n          p5.push();\r\n          p5.noStroke();\r\n          p5.fill(89, 50, 25);\r\n          p5.circle(i * cellWidth, j * cellWidth, cellWidth / 6 - 1);\r\n          p5.pop();\r\n        }\r\n      }\r\n      for (let i = 0; i < columns; i++) {\r\n        for (let j = 0; j < rows; j++) {\r\n          if (board[i][j] == 1) {\r\n            p5.push();\r\n            p5.fill(223, 223, 223);\r\n            p5.noStroke();\r\n            p5.circle(i * cellWidth, j * cellWidth, (cellWidth / 2.2) * 2 - 1);\r\n            p5.fill(255, 255, 255, 63);\r\n            p5.circle(\r\n              i * cellWidth - cellWidth / 64,\r\n              j * cellWidth - cellWidth / 64,\r\n              (cellWidth / 2.2 - cellWidth / 32) * 2 - 1\r\n            );\r\n            p5.fill(255, 255, 255, 127);\r\n            p5.circle(\r\n              i * cellWidth - cellWidth / 32,\r\n              j * cellWidth - cellWidth / 32,\r\n              (cellWidth / 2.2 - cellWidth / 16) * 2 - 1\r\n            );\r\n            p5.fill(255, 255, 255, 127);\r\n            p5.circle(\r\n              i * cellWidth - cellWidth / 16,\r\n              j * cellWidth - cellWidth / 16,\r\n              (cellWidth / 2.2 - cellWidth / 8) * 2 - 1\r\n            );\r\n            p5.fill(255, 255, 255, 7);\r\n            p5.circle(\r\n              i * cellWidth - cellWidth / 16,\r\n              j * cellWidth - cellWidth / 16,\r\n              (cellWidth / 2.2 - cellWidth / 8) * 2 - 1\r\n            );\r\n            p5.fill(0, 0, 0, 7);\r\n            p5.circle(\r\n              i * cellWidth - cellWidth / 16,\r\n              j * cellWidth - cellWidth / 16,\r\n              (cellWidth / 2.2 - cellWidth / 4) * 2 - 1\r\n            );\r\n            p5.pop();\r\n          }\r\n          if (board[i][j] == 2) {\r\n            p5.push();\r\n            p5.fill(31, 31, 31);\r\n            p5.noStroke();\r\n            p5.circle(i * cellWidth, j * cellWidth, (cellWidth / 2.2) * 2 - 1);\r\n            p5.fill(63, 63, 63, 63);\r\n            p5.circle(\r\n              i * cellWidth - cellWidth / 64,\r\n              j * cellWidth - cellWidth / 64,\r\n              (cellWidth / 2.2 - cellWidth / 32) * 2 - 1\r\n            );\r\n            p5.fill(63, 63, 63, 127);\r\n            p5.circle(\r\n              i * cellWidth - cellWidth / 32,\r\n              j * cellWidth - cellWidth / 32,\r\n              (cellWidth / 2.2 - cellWidth / 16) * 2 - 1\r\n            );\r\n            p5.fill(63, 63, 63, 127);\r\n            p5.circle(\r\n              i * cellWidth - cellWidth / 16,\r\n              j * cellWidth - cellWidth / 16,\r\n              (cellWidth / 2.2 - cellWidth / 8) * 2 - 1\r\n            );\r\n            p5.fill(255, 255, 255, 7);\r\n            p5.circle(\r\n              i * cellWidth - cellWidth / 16,\r\n              j * cellWidth - cellWidth / 16,\r\n              (cellWidth / 2.2 - cellWidth / 8) * 2 - 1\r\n            );\r\n            p5.fill(255, 255, 255, 7);\r\n            p5.circle(\r\n              i * cellWidth - cellWidth / 16,\r\n              j * cellWidth - cellWidth / 16,\r\n              (cellWidth / 2.2 - cellWidth / 4) * 2 - 1\r\n            );\r\n            p5.pop();\r\n          }\r\n        }\r\n      }\r\n      for (let j = columns - 1; j > 0; j--) {\r\n        p5.push();\r\n        p5.strokeWeight(2);\r\n        p5.fill(black);\r\n        p5.textAlign(p5.CENTER, p5.CENTER);\r\n        p5.textStyle(p5.BOLD);\r\n        p5.textFont(\"Cousine Regular\");\r\n        p5.textSize(cellWidth / 3);\r\n        p5.text(columns - j, cellWidth / 3, j * cellWidth);\r\n        p5.pop();\r\n      }\r\n      for (let i = 1; i < rows; i++) {\r\n        p5.push();\r\n        p5.fill(black);\r\n        p5.textStyle(p5.BOLD);\r\n        p5.textAlign(p5.CENTER, p5.CENTER);\r\n        p5.textFont(\"Cousine Regular\");\r\n        p5.textSize(cellWidth / 3);\r\n        p5.text(alphabet[i - 1], i * cellWidth, cellWidth - 2 * (cellWidth / 3));\r\n        p5.pop();\r\n      }\r\n      p5.pop();\r\n    };\r\n  };\r\n\r\n\r\n  onMount(function() {\r\n    initialize();\r\n    $game.result = result;\r\n    $game.board = board;\r\n    $game.render = new p5(render, id);  \r\n  });\r\n\r\n</script>\r\n\r\n<style>\r\n\tdiv {\r\n\t  width: auto;\r\n\t  height: auto;\r\n\t  margin: 0 auto;\r\n\t  z-index: -1;\r\n\t}\r\n</style>\r\n\r\n<div bind:this={id} on:click={click}></div>"
  ],
  "names": [],
  "mappings": "AAwBU,IAAI,AAAE,CAAC,AACb,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,CAAC,AACZ,CAAC,AACO,CAAC,AAAE,CAAC,AACV,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,CAAC,CACV,WAAW,CAAE,iBAAiB,CAAC,CAAC,cAAc,CAAC,CAAC,qBAAqB,CAAC;MACpE,eAAe,CAAC,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,CAAC,UAAU,CACnD,mBAAmB,CAAE,IAAI,CACzB,gBAAgB,CAAE,IAAI,CACtB,kBAAkB,CAAE,IAAI,CACxB,eAAe,CAAE,IAAI,AACvB,CAAC,AACO,EAAE,AAAE,CAAC,AACX,SAAS,CAAE,KAAK,AAClB,CAAC,AACD,IAAI,eAAC,CAAC,AACJ,UAAU,CAAE,GAAG,CACf,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,MAAM,CAAE,CAAC,CACT,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,CAAC,CACV,UAAU,CAAE,MAAM,AACpB,CAAC;AClBD,KAAK,cAAC,CAAC,AACL,UAAU,CAAE,GAAG,CACf,aAAa,CAAE,GAAG,CAClB,WAAW,CAAE,GAAG,CAChB,gBAAgB,CAAE,OAAO,CACzB,SAAS,CAAE,KAAK,CAChB,OAAO,CAAE,KAAK,CACd,UAAU,CAAE,UAAU,CACtB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CACtB,aAAa,CAAE,GAAG,AACpB,CAAC,AACD,KAAK,cAAC,CAAC,AACL,SAAS,CAAE,KAAK,AAClB,CAAC;ACdD,KAAK,cAAC,CAAC,AACL,UAAU,CAAE,GAAG,CACf,aAAa,CAAE,GAAG,CAClB,WAAW,CAAE,GAAG,CAChB,gBAAgB,CAAE,OAAO,CACzB,SAAS,CAAE,KAAK,CAChB,OAAO,CAAE,KAAK,CACd,UAAU,CAAE,UAAU,CACtB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CACtB,aAAa,CAAE,GAAG,AACpB,CAAC,AACD,KAAK,cAAC,CAAC,AACL,SAAS,CAAE,KAAK,AAClB,CAAC;AC7BD,OAAO,eAAC,CAAC,AACP,QAAQ,CAAE,MAAM,CAChB,gBAAgB,CAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CACjC,GAAG,CAAE,CAAC,CACN,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,AACd,CAAC,AAGD,sBAAO,CAAC,CAAC,eAAC,CAAC,AACT,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,KAAK,CACd,KAAK,CAAE,OAAO,CACd,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,GAAG,CAAC,GAAG,CAChB,SAAS,CAAE,KAAK,CAChB,eAAe,CAAE,IAAI,AACvB,CAAC,AACD,sBAAO,CAAC,GAAG,eAAC,CAAC,AACX,KAAK,CAAE,KAAK,CACZ,OAAO,CAAE,KAAK,CACd,KAAK,CAAE,OAAO,CACd,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,GAAG,CAAC,GAAG,CAChB,eAAe,CAAE,IAAI,CACrB,SAAS,CAAE,KAAK,AAClB,CAAC,AAGD,sBAAO,CAAC,gBAAC,MAAM,AAAC,CAAC,AACf,UAAU,CAAE,IAAI,CAChB,KAAK,CAAE,KAAK,AACd,CAAC;ACxCD,GAAG,eAAC,CAAC,AACH,QAAQ,CAAE,KAAK,CACf,GAAG,CAAE,IAAI,CACT,SAAS,CAAE,WAAW,KAAK,CAAC,CAC5B,KAAK,CAAE,IAAI,CACX,gBAAgB,CAAE,KAAK,CACvB,OAAO,CAAE,KAAK,CACd,KAAK,CAAE,OAAO,CACd,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CACnB,UAAU,CAAE,UAAU,CACtB,OAAO,CAAE,GAAG,CAAC,GAAG,CAChB,SAAS,CAAE,KAAK,CAChB,eAAe,CAAE,IAAI,AACvB,CAAC;ACfD,EAAE,eAAC,CAAC,AACF,OAAO,CAAE,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAC5B,SAAS,CAAE,KAAK,AAClB,CAAC;AC4QF,GAAG,eAAC,CAAC,AACH,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,OAAO,CAAE,EAAE,AACb,CAAC"
}